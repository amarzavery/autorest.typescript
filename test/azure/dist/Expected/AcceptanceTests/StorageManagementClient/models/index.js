"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Defines values for Reason.
 * Possible values include: 'AccountNameInvalid', 'AlreadyExists'
 * @readonly
 * @enum {string}
 */
var Reason;
(function (Reason) {
    Reason["AccountNameInvalid"] = "AccountNameInvalid";
    Reason["AlreadyExists"] = "AlreadyExists";
})(Reason = exports.Reason || (exports.Reason = {}));
/**
 * Defines values for AccountType.
 * Possible values include: 'Standard_LRS', 'Standard_ZRS', 'Standard_GRS',
 * 'Standard_RAGRS', 'Premium_LRS'
 * @readonly
 * @enum {string}
 */
var AccountType;
(function (AccountType) {
    AccountType["StandardLRS"] = "Standard_LRS";
    AccountType["StandardZRS"] = "Standard_ZRS";
    AccountType["StandardGRS"] = "Standard_GRS";
    AccountType["StandardRAGRS"] = "Standard_RAGRS";
    AccountType["PremiumLRS"] = "Premium_LRS";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
/**
 * Defines values for ProvisioningState.
 * Possible values include: 'Creating', 'ResolvingDNS', 'Succeeded'
 * @readonly
 * @enum {string}
 */
var ProvisioningState;
(function (ProvisioningState) {
    ProvisioningState["Creating"] = "Creating";
    ProvisioningState["ResolvingDNS"] = "ResolvingDNS";
    ProvisioningState["Succeeded"] = "Succeeded";
})(ProvisioningState = exports.ProvisioningState || (exports.ProvisioningState = {}));
/**
 * Defines values for AccountStatus.
 * Possible values include: 'Available', 'Unavailable'
 * @readonly
 * @enum {string}
 */
var AccountStatus;
(function (AccountStatus) {
    AccountStatus["Available"] = "Available";
    AccountStatus["Unavailable"] = "Unavailable";
})(AccountStatus = exports.AccountStatus || (exports.AccountStatus = {}));
/**
 * Defines values for KeyName.
 * Possible values include: 'key1', 'key2'
 * @readonly
 * @enum {string}
 */
var KeyName;
(function (KeyName) {
    KeyName["Key1"] = "key1";
    KeyName["Key2"] = "key2";
})(KeyName = exports.KeyName || (exports.KeyName = {}));
/**
 * Defines values for UsageUnit.
 * Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
 * 'CountsPerSecond', 'BytesPerSecond'
 * @readonly
 * @enum {string}
 */
var UsageUnit;
(function (UsageUnit) {
    UsageUnit["Count"] = "Count";
    UsageUnit["Bytes"] = "Bytes";
    UsageUnit["Seconds"] = "Seconds";
    UsageUnit["Percent"] = "Percent";
    UsageUnit["CountsPerSecond"] = "CountsPerSecond";
    UsageUnit["BytesPerSecond"] = "BytesPerSecond";
})(UsageUnit = exports.UsageUnit || (exports.UsageUnit = {}));
//# sourceMappingURL=index.js.map